{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","split","join","filter","element","prototype","PropTypes","string","isRequired","aboutText","defaultProps","Alert","height","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4fa8c967.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n              </li> */}\r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n            </form> */}\r\n            <div className={`form-check form-switch text-${props.mode===`light`?`dark`:`light`}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\nNavbar.prototype = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    aboutText: 'about'\r\n  };","import React, {useState} from 'react'\r\n\r\n// console.log(useState('Enter text here2'));\r\n\r\nexport default function TextForm(props) {\r\n    \r\n    const handleUpClick = () => {\r\n        // console.log(\"Uppercase was clicked: \" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to uppercase!\", \"success\");\r\n    }\r\n\r\n    const handlelowClick = () => {\r\n        // console.log(\"Uppercase was clicked: \" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to lowercase!\", \"success\");\r\n    }\r\n    \r\n    const handleclearClick = () => {\r\n        // console.log(\"Clear Text was clicked: \" + text);\r\n        let newText = '';\r\n        setText(newText)\r\n        props.showAlert(\"Text is cleared!\", \"success\");\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        // console.log(\"On Change\");\r\n        setText(event.target.value)\r\n    }\r\n\r\n    const handleCopy = () => {\r\n        // console.log(\"Text is copied\");\r\n        // var text = document.getElementById(\"myBox\");\r\n        // text.select();\r\n        // navigator.clipboard.writeText(text.value);\r\n        navigator.clipboard.writeText(text);\r\n        // document.getSelection().removeAllRanges();\r\n        props.showAlert(\"Copied to Clipboard!\", \"success\");\r\n    }\r\n\r\n    const handleExtraSpaces = () => {\r\n        // console.log(\"Extra Spaces is Removed\");\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Extra spaces removed!\", \"success\");\r\n    }\r\n\r\n    const [text, setText] = useState('');\r\n    // text = \"new text\"; //Wrong way to change the state\r\n    // setText(\"new text\"); //Correct way to change the state\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n            {/* <h1>{props.heading} - {text}</h1> */}\r\n            <h1 className='mb-4'>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'#13466e':'white', color: props.mode==='dark'?'white':'#042743'}} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handlelowClick}>Convert to Lowercase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleclearClick}>Clear Text</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>Copy Text</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n            <h2>Your text summary</h2>\r\n            <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} character</p>\r\n            <p>{0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter to something in the textbox above preview it here!\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word) =>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        <div style={{height: '50px'}}>\r\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n            {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light'); // Whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) =>{\n      setAlert({\n        msg: message,\n        type: type\n      })\n      setTimeout(() => {\n        setAlert(null);\n      }, 2000);\n  }\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      // document.title = 'TextUtils - Dark Mode';\n      // setInterval(() => {\n      //   document.title = 'TextUtils is amazing Mode';\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = 'Install TextUtils Now';\n      // }, 1500);\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n      // document.title = 'TextUtils - Light Mode';\n    }\n  }\n  return (\n    <>\n    {/* <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\"/> */}\n    {/* <Navbar/> */}\n    {/* <Router> */}\n    <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n    {/* <Switch> */}\n      {/* /users --> Component 1\n          /users/home --> Component 2 */}\n          {/* <Route exact path=\"/about\">\n            <About mode={mode}/>\n          </Route> */}\n          {/* <Route exact path=\"/\"> */}\n          <TextForm showAlert={showAlert} heading=\"Try TextUtils - Word Counter, Character Counter, Converting Uppercase & Lowercase, Remove extra spaces\" mode={mode}/>\n          {/* </Route> */}\n    {/* </Switch> */}\n    </div>\n    {/* </Router> */}\n    {/* <About/> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}